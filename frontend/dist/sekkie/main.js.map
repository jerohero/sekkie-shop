{"version":3,"sources":["./src/app/shared/models/shopping-cart-item.model.ts","./src/app/admin/admin-orders/admin-orders.component.ts","./src/app/admin/admin-orders/admin-orders.component.html","./src/app/shopping-list/shopping-cart-item/shopping-cart-item.component.ts","./src/app/shopping-list/shopping-cart-item/shopping-cart-item.component.html","./src/app/shared/services/data-access/order-access.service.ts","./src/app/shared/services/data-access/generic-access.service.ts","./src/environments/environment.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/pipes/role.pipe.ts","./src/app/shared/models/user.model.ts","./src/app/shop/sidebar/search/search.component.ts","./src/app/shop/sidebar/search/search.component.html","./src/app/shared/services/order.service.ts","./src/app/account/account-orders/account-orders.component.ts","./src/app/account/account-orders/account-orders.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/shop/item-list/item-list-item/item-list-item.component.ts","./src/app/shop/item-list/item-list-item/item-list-item.component.html","./src/app/shared/services/data-access/item-access.service.ts","./src/app/shared/models/item.model.ts","./src/app/shared/services/filters-service.ts","./src/app/app.module.ts","./src/app/shop/sidebar/sidebar.component.ts","./src/app/shop/sidebar/sidebar.component.html","./src/app/shop/shop.component.ts","./src/app/shop/shop.component.html","./src/app/admin/admin-users/admin-users.component.ts","./src/app/admin/admin-users/admin-users.component.html","./src/app/shared/models/order.model.ts","./src/app/shopping-list/order-page/shipping-page/shipping-page.component.ts","./src/app/shopping-list/order-page/shipping-page/shipping-page.component.html","./src/app/shop/item-list/item-list-item/item-details/item-details.component.ts","./src/app/shop/item-list/item-list-item/item-details/item-details.component.html","./src/app/shared/guard/auth.guard.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/shared/services/data-access/user-access.service.ts","./src/app/unknown-page/unknown-page.component.ts","./src/app/unknown-page/unknown-page.component.html","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/admin/admin-items/admin-items.component.ts","./src/app/admin/admin-items/admin-items.component.html","./src/app/shared/services/shopping-list.service.ts","./src/app/shopping-list/order-page/order-page.component.ts","./src/app/shopping-list/order-page/order-page.component.html","./src/app/shared/services/item.service.ts","./src/app/shop/item-list/item-list.component.ts","./src/app/shop/item-list/item-list.component.html","./src/app/shared/guard/admin.guard.ts","./src/app/shared/services/data-storage.service.ts","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/shared/pipes/status.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/components/loading-spinner/loading-spinner.component.ts","./src/app/shared/components/loading-spinner/loading-spinner.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class ShoppingCartItem {\r\n  constructor(public id: string,\r\n              public name: string,\r\n              public price: number,\r\n              public totalPrice: number,\r\n              public primaryImagePath: string,\r\n              public selectedSize: string,\r\n              public selectedColor: string,\r\n              public selectedAmount: number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.price = price;\r\n    this.totalPrice = totalPrice;\r\n    this.primaryImagePath = primaryImagePath;\r\n    this.selectedSize = selectedSize;\r\n    this.selectedColor = selectedColor;\r\n    this.selectedAmount = selectedAmount;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport {Order} from '../../shared/models/order.model';\r\nimport {OrderAccessService} from '../../shared/services/data-access/order-access.service';\r\nimport {skipWhile, take} from 'rxjs/operators';\r\nimport {DataStorageService} from '../../shared/services/data-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-orders',\r\n  templateUrl: './admin-orders.component.html',\r\n  styleUrls: ['./admin-orders.component.scss'],\r\n})\r\nexport class AdminOrdersComponent implements OnInit {\r\n  orders: Order[];\r\n  selectedOrder: Order;\r\n\r\n  constructor(private orderAccessService: OrderAccessService, private dataStorageService: DataStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataStorageService.user.pipe(skipWhile(user => !user), take(1))\r\n      .subscribe(() => {\r\n        this.orderAccessService.fetchOrders()\r\n          .subscribe((orders) => {\r\n            this.orders = orders;\r\n            this.selectedOrder = this.orders[0];\r\n          });\r\n      });\r\n  }\r\n\r\n  showOrder(order: Order): void {\r\n    this.selectedOrder = order;\r\n  }\r\n\r\n  deleteOrder(): void {\r\n    this.orderAccessService.deleteOrder(this.selectedOrder.id)\r\n      .subscribe(() => {\r\n        const index = this.orders.indexOf(this.selectedOrder, 0);\r\n        if (index > -1) {\r\n          this.orders.splice(index, 1);\r\n        }\r\n        this.selectedOrder = null;\r\n      });\r\n  }\r\n\r\n  updateOrderStatus() {\r\n    if (this.orderStatusButtonTxt === 'ship') {\r\n      this.selectedOrder.status = 'SHIPPING';\r\n    } else {\r\n      this.selectedOrder.status = 'ON_HOLD';\r\n    }\r\n    this.orderAccessService.updateOrder(this.selectedOrder).subscribe();\r\n  }\r\n\r\n  get orderStatusButtonTxt() {\r\n    if (this.selectedOrder.status === 'ON_HOLD') {\r\n      return 'ship';\r\n    } else {\r\n      return 'cancel';\r\n    }\r\n  }\r\n}\r\n","<div class=\"admin-box orders-box\">\r\n  <div class=\"left\">\r\n    <header class=\"box-title\"><h2>orders</h2></header>\r\n    <div class=\"box-content\">\r\n      <ul class=\"box-top\">\r\n        <li><p>name</p></li>\r\n        <li><p>country</p></li>\r\n        <li><p>date</p></li>\r\n        <li><p>status</p></li>\r\n        <li><p>total</p></li>\r\n      </ul>\r\n      <ul class=\"left-items-container\">\r\n        <li class=\"item {{ order.id === selectedOrder?.id ? 'active' : '' }}\" *ngFor=\"let order of orders;\" (click)=\"showOrder(order)\">\r\n          <ul>\r\n            <li><p>{{ order.name.firstName.substr(0, 1) + '. ' + order.name.lastName }}</p></li>\r\n            <li><p>{{ order.address.country }}</p></li>\r\n            <li><p>{{ order.date | date: 'dd/MM/yyyy' }}</p></li>\r\n            <li><p>{{ order.status | status}}</p></li>\r\n            <li><p>${{ order.totalPrice }}</p></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"right\">\r\n    <header class=\"box-title\"><h2>order info</h2></header>\r\n    <div class=\"box-content\" *ngIf=\"selectedOrder; else noneSelected\">\r\n      <ul class=\"box-top\">\r\n        <li><p>name</p></li>\r\n        <li><p>color</p></li>\r\n        <li><p>amount</p></li>\r\n        <li><p>size</p></li>\r\n        <li><p>total</p></li>\r\n      </ul>\r\n      <div class=\"order-items-container\">\r\n        <ul class=\"order-items-list\">\r\n          <li *ngFor=\"let item of selectedOrder.items\" class=\"order-items-list-item\">\r\n            <a [routerLink]=\"['/' + item.id]\">\r\n              <ul>\r\n                <li><p>{{item.name}}</p></li>\r\n                <li><p>{{item.selectedColor}}</p></li>\r\n                <li><p>{{item.selectedAmount}}</p></li>\r\n                <li><p>{{item.selectedSize}}</p></li>\r\n                <li><p>${{item.price * item.selectedAmount}}</p></li>\r\n              </ul>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"order-details\">\r\n        <ul class=\"top-details\">\r\n          <li><p><span>id</span> {{selectedOrder.id}}</p></li>\r\n          <li><p><span>total</span> ${{selectedOrder.totalPrice}}</p></li>\r\n          <li><p><span>items</span> {{selectedOrder.items.length}}</p></li>\r\n          <li><p><span>date</span> {{selectedOrder.date | date: 'dd/MM/yyyy'}}</p></li>\r\n        </ul>\r\n        <div class=\"bottom-details\">\r\n          <ul class=\"bottom-details-left\">\r\n            <li><p><span>street and housenumber</span> {{selectedOrder.address.streetAndHouseNumber}}</p></li>\r\n            <li><p><span>postal code</span> {{selectedOrder.address.postalCode}}</p></li>\r\n            <li><p><span>city</span> {{selectedOrder.address.city}}</p></li>\r\n            <li><p><span>country</span> {{selectedOrder.address.country}}</p></li>\r\n          </ul>\r\n          <ul class=\"bottom-details-right\">\r\n            <li><p><span>first name</span> {{selectedOrder.name.firstName}}</p></li>\r\n            <li><p><span>last name</span> {{selectedOrder.name.lastName}}</p></li>\r\n            <li><p><span>email</span> {{selectedOrder.email}}</p></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"primary-buttons\">\r\n          <button class=\"delete\" (click)=\"deleteOrder()\">delete</button>\r\n          <button (click)=\"updateOrderStatus()\">{{ orderStatusButtonTxt }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #noneSelected><p class=\"noneSelected\">{{ orders?.length <= 0 ? 'There are currently no admin-orders' : 'Select an order to view it' }}</p></ng-template>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { ShoppingCartItem } from '../../shared/models/shopping-cart-item.model';\r\nimport {ShoppingListService} from '../../shared/services/shopping-list.service';\r\n\r\n@Component({\r\n  selector: 'app-shopping-cart-item',\r\n  templateUrl: './shopping-cart-item.component.html',\r\n  styleUrls: ['./shopping-cart-item.component.scss']\r\n})\r\nexport class ShoppingCartItemComponent implements OnInit {\r\n  @Input() item: ShoppingCartItem;\r\n  showRemove: boolean;\r\n\r\n  constructor(private shoppingListService: ShoppingListService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  removeItem(): void {\r\n    this.shoppingListService.removeItem(this.item);\r\n  }\r\n\r\n  plusAmount(): void {\r\n    this.item.selectedAmount++;\r\n    this.shoppingListService.updateLocalStorageCart();\r\n  }\r\n\r\n  minusAmount(): void {\r\n    if (this.item.selectedAmount >= 2) {\r\n      this.item.selectedAmount--;\r\n      this.shoppingListService.updateLocalStorageCart();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"shopping-cart-item\">\r\n  <div class=\"image-wrapper\" (mouseleave)=\"showRemove = false\">\r\n    <div *ngIf=\"showRemove\" class=\"remove-item\" (click)=\"removeItem()\">\r\n      <p>remove</p>\r\n    </div>\r\n    <a (mouseenter)=\"showRemove = true\"\r\n       [routerLink]=\"['../' + item.id]\">\r\n      <img [src]=\"item.primaryImagePath\" alt=\"{{ item.name }}\">\r\n    </a>\r\n  </div>\r\n  <div class=\"item-info\">\r\n    <div class=\"item-info-row\" id=\"name-price\">\r\n      <a [routerLink]=\"['../' + item.id]\" class=\"left\">{{ item.name }}</a>\r\n      <p class=\"right\">${{ item.price }}</p>\r\n    </div>\r\n    <div class=\"item-info-row\">\r\n      <p class=\"left\">{{ item.selectedSize }}</p>\r\n      <p class=\"right\">{{ item.selectedColor }}</p>\r\n    </div>\r\n    <div class=\"item-info-row\">\r\n      <p class=\"left\">amount</p>\r\n      <div class=\"right amount-selector\">\r\n        <button (click)=\"minusAmount()\">-</button>\r\n        <p>{{ item.selectedAmount }}</p>\r\n        <button (click)=\"plusAmount()\">+</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ItemService} from '../item.service';\r\nimport {AuthService} from '../auth.service';\r\nimport {GenericAccessService} from './generic-access.service';\r\nimport {Order} from '../../models/order.model';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OrderAccessService {\r\n  constructor(\r\n    private http: HttpClient, private itemService: ItemService,\r\n    private authService: AuthService, private genericAccessService: GenericAccessService\r\n  ) { }\r\n\r\n  createOrder(order: Order): Observable<Order> {\r\n    const body = { order };\r\n    return this.genericAccessService.sendPOST<Order>('orders/', body, false);\r\n  }\r\n\r\n  deleteOrder(orderId: string): Observable<Order> {\r\n    return this.genericAccessService.sendUserSpecificDELETE<Order>('orders/' + orderId);\r\n  }\r\n\r\n  updateOrder(order: Order): Observable<Order> {\r\n    const body = { order };\r\n    return this.genericAccessService.sendUserSpecificPUT<Order>('orders/', body);\r\n  }\r\n\r\n  fetchOrders(): Observable<Order[]> {\r\n    return this.genericAccessService.sendUserSpecificGET<Order[]>('orders/');\r\n  }\r\n\r\n  fetchOrdersByUserId(userId: string): Observable<Order[]> {\r\n    return this.genericAccessService.sendGET<Order[]>('orders/' + userId, true);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from '../auth.service';\r\nimport {DataStorageService} from '../data-storage.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GenericAccessService {\r\n  API_URL = 'http://localhost:3000/';\r\n\r\n  constructor(private http: HttpClient, private dataStorageService: DataStorageService) {\r\n  }\r\n\r\n  sendGET<T>(requestPath: string, tokenRequired: boolean): Observable<T> {\r\n    const options = this.generateOptions(tokenRequired);\r\n\r\n    return this.http.get<T>(this.API_URL + requestPath, options);\r\n  }\r\n\r\n  sendUserSpecificGET<T>(requestPath: string): Observable<T> {\r\n    const options = this.generateUserSpecificOptions();\r\n\r\n    return this.http.get<T>(this.API_URL + requestPath, options);\r\n  }\r\n\r\n  sendPOST<T>(requestPath: string, body: unknown, tokenRequired: boolean): Observable<T> {\r\n    const options = this.generateOptions(tokenRequired);\r\n\r\n    return this.http.post<T>(this.API_URL + requestPath, body, options);\r\n  }\r\n\r\n  sendUserSpecificPOST<T>(requestPath: string, body: unknown): Observable<T> {\r\n    const options = this.generateUserSpecificOptions();\r\n    return this.http.post<T>(this.API_URL + requestPath, body, options);\r\n  }\r\n\r\n  sendPUT<T>(requestPath: string, body: unknown, tokenRequired: boolean): Observable<T> {\r\n    const options = this.generateOptions(tokenRequired);\r\n\r\n    return this.http.put<T>(this.API_URL + requestPath, body, options);\r\n  }\r\n\r\n  sendUserSpecificPUT<T>(requestPath: string, body: unknown): Observable<T> {\r\n    const options = this.generateUserSpecificOptions();\r\n    return this.http.put<T>(this.API_URL + requestPath, body, options);\r\n  }\r\n\r\n  sendUserSpecificDELETE<T>(requestPath: string): Observable<T> {\r\n    const options = this.generateUserSpecificOptions();\r\n    return this.http.delete<T>(this.API_URL + requestPath, options);\r\n  }\r\n\r\n  private generateOptions(tokenRequired): { headers: HttpHeaders } {\r\n    const headers = new HttpHeaders();\r\n    const options = { headers };\r\n    // if (tokenRequired && this.dataStorageService.user.value.token !== null) {\r\n    if (tokenRequired) {\r\n      options.headers = options.headers\r\n        .set('Authorization', 'Bearer ' + this.fetchToken())\r\n        .set('Refresh', this.fetchRefreshToken());\r\n    }\r\n    return options;\r\n  }\r\n\r\n  private generateUserSpecificOptions(): { headers: HttpHeaders } {\r\n    const headers = new HttpHeaders();\r\n    const options = { headers };\r\n    if (this.fetchToken() !== null && this.fetchRefreshToken() !== null) {\r\n      options.headers = options.headers\r\n        .set('Authorization', 'Bearer ' + this.fetchToken())\r\n        .set('Refresh', this.fetchRefreshToken())\r\n        .set('User', this.dataStorageService.user.getValue().id);\r\n    }\r\n    return options;\r\n  }\r\n\r\n  fetchToken(): string {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  fetchRefreshToken(): string {\r\n    return localStorage.getItem('refresh-token');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  itemion: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in itemion mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject, throwError} from 'rxjs';\r\nimport {User, UserAddress, UserName} from '../models/user.model';\r\nimport {AuthResponseData, UserAccessService} from './data-access/user-access.service';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {DataStorageService} from './data-storage.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  showLogin = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private userAccessService: UserAccessService, private dataStorageService: DataStorageService) {\r\n  }\r\n\r\n  signup(email: string, password: string): Observable<AuthResponseData> {\r\n    return this.userAccessService.registerUser(email, password)\r\n      .pipe(catchError(this.handleError), tap((resData) => {\r\n        this.handleAuthentication(resData);\r\n      }));\r\n  }\r\n\r\n  login(email: string, password: string): Observable<AuthResponseData> {\r\n    return this.userAccessService.loginUser(email, password)\r\n      .pipe(catchError(this.handleError), tap((resData) => {\r\n        this.handleAuthentication(resData);\r\n      }));\r\n  }\r\n\r\n  autoLogin() {\r\n    const refreshToken = localStorage.getItem('refresh-token');\r\n    const token = localStorage.getItem('token');\r\n    if (!refreshToken || !token) {\r\n      return;\r\n    }\r\n    this.userAccessService.verifyUser()\r\n      .subscribe((resData) => {\r\n        this.handleAuthentication(resData);\r\n      }, () => {\r\n        this.logout();\r\n      });\r\n  }\r\n\r\n  logout(): void {\r\n    this.dataStorageService.user.next(null);\r\n    localStorage.removeItem('refresh-token');\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  handleAuthentication(resData: AuthResponseData) {\r\n    localStorage.setItem('refresh-token', resData.refreshToken);\r\n    localStorage.setItem('token', resData.token);\r\n    if (!resData.user.id) {\r\n      return this.dataStorageService.user.next(null);\r\n    }\r\n    const user = new User(\r\n      resData.user.id,\r\n      resData.user.email,\r\n      resData.user.name,\r\n      resData.user.role,\r\n      resData.user.address,\r\n      resData.token\r\n    );\r\n    this.dataStorageService.user.next(user);\r\n  }\r\n\r\n  handleError(errorRes: HttpErrorResponse): Observable<any> {\r\n    let errorMsg = 'An unknown error has occurred.';\r\n    if (!errorRes.error) {\r\n      return throwError(errorMsg);\r\n    }\r\n    switch (errorRes.error.message) {\r\n      case 'EMAIL_IN_USE':\r\n        errorMsg = 'This email address is already in use. Please try another email address.';\r\n        break;\r\n      case 'NO_EMAIL':\r\n        errorMsg = 'You did not enter an email address. Please enter an email address.';\r\n        break;\r\n      case 'NO_PASSWORD':\r\n        errorMsg = 'You did not enter a password. Please enter a password.';\r\n        break;\r\n      case 'NO_MATCH':\r\n      case 'WRONG_CREDENTIALS':\r\n        errorMsg = 'You entered the wrong credentials. Please try logging in again.';\r\n        break;\r\n    }\r\n    return throwError(errorMsg);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'role'\r\n})\r\nexport class RolePipe implements PipeTransform {\r\n  transform(value: any) {\r\n    switch (value) {\r\n      case 'ROLE_USER':\r\n        return 'user';\r\n      case 'ROLE_ADMIN':\r\n        return 'admin';\r\n    }\r\n  }\r\n}\r\n","export interface UserAddress {\r\n  streetAndHouseNumber: string;\r\n  postalCode: string;\r\n  city: string;\r\n  country: string;\r\n}\r\n\r\nexport interface UserName {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\nexport class User {\r\n  constructor(\r\n    public id: string,\r\n    public email: string,\r\n    public name: UserName,\r\n    public role: string,\r\n    public address: UserAddress,\r\n    private _token: string,\r\n    // private _expiresIn: Date\r\n  ) { }\r\n\r\n  get token() {\r\n    return this._token;\r\n  }\r\n\r\n  // get expiresIn() {\r\n  //   return this._expiresIn;\r\n  // }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { ItemService } from '../../../shared/services/item.service';\r\nimport { Item } from '../../../shared/models/item.model';\r\nimport {FiltersService} from '../../../shared/services/filters-service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  searchValue = '';\r\n  searchValueSnapshot = '';\r\n  private searchValueSub = new Subscription();\r\n\r\n  constructor(private itemService: ItemService, private filtersService: FiltersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchValueSub = this.filtersService.searchValue\r\n      .subscribe(searchValue => {\r\n        this.searchValue = searchValue;\r\n        this.searchValueSnapshot = searchValue;\r\n      });\r\n  }\r\n\r\n  search(): void {\r\n    this.searchValueSnapshot = this.searchValue;\r\n    this.filtersService.searchValue.next(this.searchValue);\r\n    let results = this.itemService.getItems();\r\n\r\n    results = this.filterByCategory(results);\r\n    results = this.filterByCollection(results);\r\n    results = this.filterBySearchValue(results);\r\n\r\n    this.filtersService.itemsFiltered.next(results);\r\n  }\r\n\r\n  filterByCategory(items: Item[]): Item[] {\r\n    const activeCategory = this.filtersService.activeCategory;\r\n    if (activeCategory) {\r\n      return items.filter((item) =>\r\n        item.category.toLowerCase().includes(activeCategory.toLowerCase()));\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n\r\n  filterByCollection(items: Item[]): Item[] {\r\n    const activeCollection = this.filtersService.activeCollection;\r\n    if (activeCollection) {\r\n      return items.filter((item) =>\r\n        item.clothingCollection.toLowerCase().includes(activeCollection.toLowerCase()));\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n\r\n  filterBySearchValue(items: Item[]): Item[] {\r\n    if (this.searchValue) {\r\n       return items.filter((item: Item) =>\r\n        item.name.toLowerCase().includes(this.searchValue.toLowerCase()));\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n\r\n  resetSearch(): void {\r\n    this.searchValue = '';\r\n    this.search();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.searchValueSub.unsubscribe();\r\n  }\r\n}\r\n","<label id=\"search\">\r\n  <input type=\"text\" [(ngModel)]=\"searchValue\" (keyup.enter)=\"search()\">\r\n  <span id=\"search-button\" (click)=\"search()\">\r\n    <span class=\"img-center-helper\"></span><img src=\"../../../assets/images/search.svg\" alt=\"search icon\">\r\n  </span>\r\n</label>\r\n<a *ngIf=\"searchValueSnapshot\" class=\"current-search-value\" (click)=\"resetSearch()\">\r\n  {{ searchValueSnapshot }} <span>x</span>\r\n</a>\r\n","import {Injectable} from '@angular/core';\r\nimport {ShoppingCartItem} from '../models/shopping-cart-item.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OrderService {\r\n  shoppingCartItems: ShoppingCartItem[];\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Order} from '../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-orders-box',\r\n  templateUrl: './account-orders.component.html',\r\n  styleUrls: ['./account-orders.component.scss']\r\n})\r\nexport class AccountOrdersComponent implements OnInit {\r\n  @Input() orders: Order[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"orders-container\">\r\n  <div class=\"box-content\">\r\n    <header>\r\n      <h2>orders</h2>\r\n    </header>\r\n    <div id=\"orders\">\r\n      <ul id=\"orders-top\">\r\n        <li><p>name</p></li>\r\n        <li><p>date</p></li>\r\n        <li><p>status</p></li>\r\n        <li><p>items</p></li>\r\n        <li><p>total</p></li>\r\n      </ul>\r\n      <ul id=\"orders-list\" *ngIf=\"orders?.length > 0; else noOrders\">\r\n        <li class=\"order\" *ngFor=\"let order of orders;\">\r\n          <ul>\r\n            <li><p>{{ order.name.firstName + ' ' + order.name.lastName }}</p></li>\r\n            <li><p>{{ order.date | date }}</p></li>\r\n            <li><p class=\"highlight\">{{ order.status | status }}</p></li>\r\n            <li><p>{{ order.items.length }} items</p></li>\r\n            <li><p>${{ order.totalPrice }}</p></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <ng-template #noOrders><p id=\"no-orders\">you have yet to order anything.</p></ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ShoppingListService} from './shared/services/shopping-list.service';\r\nimport {AuthService} from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  loadedFeature = 'item';\r\n  showLogin: boolean;\r\n\r\n  constructor(private shoppingListService: ShoppingListService, private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.shoppingListService.fetchLocalStorageCart();\r\n    this.authService.autoLogin();\r\n    this.authService.showLogin\r\n      .subscribe((showLogin) => {\r\n        this.showLogin = showLogin;\r\n      });\r\n  }\r\n\r\n  onNavigate(feature: string): void {\r\n    this.loadedFeature = feature;\r\n  }\r\n\r\n  onLoginClicked(): void {\r\n    this.showLogin = true;\r\n  }\r\n\r\n  onLoginClosed(): void {\r\n    this.showLogin = false;\r\n  }\r\n}\r\n","<div id=\"content-wrapper\">\r\n  <app-header id=\"header\"></app-header>\r\n  <app-login *ngIf=\"showLogin\"></app-login>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div id=\"admin\">\r\n  <header id=\"admin-title\">\r\n    <h1>admin panel</h1>\r\n  </header>\r\n  <div id=\"admin-content\">\r\n    <div class=\"admin-panel\">\r\n      <app-admin-items></app-admin-items>\r\n    </div>\r\n    <div class=\"admin-panel\">\r\n      <app-admin-orders></app-admin-orders>\r\n    </div>\r\n    <div class=\"admin-panel\">\r\n      <app-admin-users></app-admin-users>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, Input, Output} from '@angular/core';\r\nimport { Item } from '../../../shared/models/item.model';\r\n\r\n@Component({\r\n  selector: 'app-item-list-item',\r\n  templateUrl: './item-list-item.component.html',\r\n  styleUrls: ['./item-list-item.component.scss']\r\n})\r\nexport class ItemListItemComponent implements OnInit {\r\n  @Output() shownImagePath: string;\r\n  @Input() item: Item;\r\n\r\n  ngOnInit() {\r\n    this.shownImagePath = this.item.primaryImagePath;\r\n  }\r\n\r\n  toggleImage() {\r\n    this.shownImagePath =\r\n      this.shownImagePath === this.item.primaryImagePath ? this.item.secondaryImagePaths[0] : this.item.primaryImagePath;\r\n  }\r\n}\r\n","<a class=\"item\" [routerLink]=\"['../' + item.id]\" (mouseover)=\"toggleImage()\" (mouseout)=\"toggleImage()\">\r\n  <img [src]=\"shownImagePath\" alt=\"{{ item.name }}\">\r\n  <div class=\"item-details\">\r\n    <h4 class=\"item-title\">{{ item.name }}</h4>\r\n    <p class=\"item-price\">${{ item.price }}</p>\r\n  </div>\r\n</a>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Item } from '../../models/item.model';\r\nimport {ItemService} from '../item.service';\r\nimport {AuthService} from '../auth.service';\r\nimport {GenericAccessService} from './generic-access.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../../models/order.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ItemAccessService {\r\n  constructor(\r\n    private http: HttpClient, private itemService: ItemService,\r\n    private authService: AuthService, private genericAccessService: GenericAccessService) { }\r\n\r\n  fetchItems() {\r\n    return this.genericAccessService.sendGET<Item[]>('items/', false);\r\n  }\r\n\r\n  fetchItem(id: string) {\r\n    return this.genericAccessService.sendGET<Item>('items/' + id, false);\r\n  }\r\n\r\n  deleteItem(itemId: string): Observable<Order> {\r\n    return this.genericAccessService.sendUserSpecificDELETE<Order>('items/' + itemId);\r\n  }\r\n\r\n  updateItem(item: Item): Observable<Item> {\r\n    const body = { item };\r\n    return this.genericAccessService.sendUserSpecificPUT<Item>('items/' + item.id, body);\r\n  }\r\n\r\n  createItem(item: Item): Observable<Item> {\r\n    const body = { item };\r\n    return this.genericAccessService.sendUserSpecificPOST<Item>('items/', body);\r\n  }\r\n}\r\n\r\n// this.authService.user.pipe(take(1), exhaustMap(user => {\r\n//   return this.http\r\n//     .get<Item[]>('http://localhost:3000/items', {\r\n//       params: new HttpParams().set('auth', user.token)\r\n//     });\r\n// }), tap((items) => {\r\n//   this.itemService.setItems(items);\r\n// }));\r\n","export class Item {\r\n  constructor(public id: string,\r\n              public name: string,\r\n              public price: number,\r\n              public category: string,\r\n              public clothingCollection: string,\r\n              public primaryImagePath: string,\r\n              public secondaryImagePaths: string[],\r\n              public sizes: string[],\r\n              public colors: string[]) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.price = price;\r\n    this.category = category;\r\n    this.clothingCollection = clothingCollection;\r\n    this.primaryImagePath = primaryImagePath;\r\n    this.secondaryImagePaths = secondaryImagePaths;\r\n    this.sizes = sizes;\r\n    this.colors = colors;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {Item} from '../models/item.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class FiltersService {\r\n  activeCategory = '';\r\n  activeCollection = '';\r\n  searchValue = new BehaviorSubject<string>('');\r\n  itemsFiltered = new BehaviorSubject<Item[]>([]);\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { ItemListItemComponent } from './shop/item-list/item-list-item/item-list-item.component';\r\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { UnknownPageComponent } from './unknown-page/unknown-page.component';\r\nimport { ShoppingCartItemComponent } from './shopping-list/shopping-cart-item/shopping-cart-item.component';\r\nimport { ItemDetailsComponent } from './shop/item-list/item-list-item/item-details/item-details.component';\r\nimport { ItemListComponent } from './shop/item-list/item-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SidebarComponent } from './shop/sidebar/sidebar.component';\r\nimport { SearchComponent } from './shop/sidebar/search/search.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport {RolePipe} from './shared/pipes/role.pipe';\r\nimport { OrderPageComponent } from './shopping-list/order-page/order-page.component';\r\nimport { AccountOrdersComponent } from './account/account-orders/account-orders.component';\r\nimport { ShippingPageComponent } from './shopping-list/order-page/shipping-page/shipping-page.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminOrdersComponent } from './admin/admin-orders/admin-orders.component';\r\nimport {StatusPipe} from './shared/pipes/status.pipe';\r\nimport { AdminUsersComponent } from './admin/admin-users/admin-users.component';\r\nimport { AdminItemsComponent } from './admin/admin-items/admin-items.component';\r\nimport {AngularResizedEventModule} from 'angular-resize-event';\r\nimport {LoadingSpinnerComponent} from './shared/components/loading-spinner/loading-spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ShopComponent,\r\n    ItemListComponent,\r\n    ItemListItemComponent,\r\n    ShoppingListComponent,\r\n    ItemDetailsComponent,\r\n    UnknownPageComponent,\r\n    ShoppingCartItemComponent,\r\n    LoginComponent,\r\n    SidebarComponent,\r\n    SearchComponent,\r\n    AccountComponent,\r\n    RolePipe,\r\n    StatusPipe,\r\n    OrderPageComponent,\r\n    AccountOrdersComponent,\r\n    ShippingPageComponent,\r\n    AdminComponent,\r\n    AdminOrdersComponent,\r\n    AdminUsersComponent,\r\n    AdminItemsComponent,\r\n    LoadingSpinnerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    AngularResizedEventModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {AfterContentInit, AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ItemService} from '../../shared/services/item.service';\r\nimport {SearchComponent} from './search/search.component';\r\nimport {FiltersService} from '../../shared/services/filters-service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('search') search: SearchComponent;\r\n  categories: string[] = this.itemService.categories;\r\n  collections: string[] = this.itemService.collections;\r\n  activeCategory;\r\n  activeCollection;\r\n\r\n  constructor(private itemService: ItemService, private filtersService: FiltersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeCategory = this.filtersService.activeCategory;\r\n    this.activeCollection = this.filtersService.activeCollection;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.search.search();\r\n    });\r\n  }\r\n\r\n  setActiveCategory(category: string): void {\r\n    this.activeCategory = category;\r\n    this.filtersService.activeCategory = category;\r\n    this.search.search();\r\n  }\r\n\r\n  setActiveCollection(collection: string): void {\r\n    this.activeCollection = collection;\r\n    this.filtersService.activeCollection = collection;\r\n    this.search.search();\r\n  }\r\n}\r\n","<div id=\"shop-sidebar\">\r\n  <aside class=\"sidebar-section\">\r\n    <p>categories</p>\r\n    <ul>\r\n      <li>\r\n        <a (click)=\"setActiveCategory('')\" class=\"{{ activeCategory === '' ? 'active' : '' }}\">all</a>\r\n      </li>\r\n      <li *ngFor=\"let category of categories\">\r\n        <a (click)=\"setActiveCategory(category)\" class=\"{{ activeCategory === category ? 'active' : '' }}\">{{ category }}</a>\r\n      </li>\r\n    </ul>\r\n  </aside>\r\n  <aside class=\"sidebar-section\">\r\n    <p>collections</p>\r\n    <div id=\"collections\">\r\n      <button (click)=\"setActiveCollection('')\" class=\"{{ activeCollection === '' ? 'active' : '' }}\">\r\n        all\r\n      </button>\r\n      <button *ngFor=\"let collection of collections\" (click)=\"setActiveCollection(collection)\" class=\"{{ activeCollection === collection ? 'active' : '' }}\">\r\n        {{ collection }}\r\n      </button>\r\n    </div>\r\n  </aside>\r\n  <aside class=\"sidebar-section\">\r\n    <p>search</p>\r\n    <app-search #search></app-search>\r\n  </aside>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.scss']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<div id=\"main\">\r\n  <div id=\"shop-wrapper\">\r\n    <div id=\"shop-sidebar-wrapper\">\r\n      <app-sidebar></app-sidebar>\r\n    </div>\r\n    <div id=\"shop-content-wrapper\">\r\n      <app-item-list></app-item-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {User} from '../../shared/models/user.model';\r\nimport {UserAccessService} from '../../shared/services/data-access/user-access.service';\r\nimport {DataStorageService} from '../../shared/services/data-storage.service';\r\nimport {skipWhile, take} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-users',\r\n  templateUrl: './admin-users.component.html',\r\n  styleUrls: ['./admin-users.component.scss']\r\n})\r\nexport class AdminUsersComponent implements OnInit {\r\n  users: User[];\r\n  selectedUser: User;\r\n\r\n  constructor(private userAccessService: UserAccessService, private dataStorageService: DataStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataStorageService.user.pipe(skipWhile(user => !user), take(1))\r\n      .subscribe(() => {\r\n        this.userAccessService.fetchUsers()\r\n          .subscribe((users) => {\r\n            this.users = users;\r\n            this.selectedUser = this.users[0];\r\n          });\r\n      });\r\n  }\r\n\r\n  deleteUser(): void {\r\n    this.userAccessService.deleteUser(this.selectedUser.id)\r\n      .subscribe(() => {\r\n        const index = this.users.indexOf(this.selectedUser, 0);\r\n        if (index > -1) {\r\n          this.users.splice(index, 1);\r\n        }\r\n        this.selectedUser = null;\r\n      });\r\n  }\r\n\r\n  showUser(user: User): void {\r\n    this.selectedUser = user;\r\n  }\r\n\r\n  updateUserRole(): void {\r\n    if (this.selectedUser.id === this.dataStorageService.user.getValue().id) {\r\n      return alert('You can\\'t demote yourself!');\r\n    }\r\n    if (this.userRoleButtonTxt === 'promote') {\r\n      this.selectedUser.role = 'ROLE_ADMIN';\r\n    } else {\r\n      this.selectedUser.role = 'ROLE_USER';\r\n    }\r\n    this.userAccessService.updateUserRole(this.selectedUser)\r\n      .subscribe((user) => {\r\n        console.log(user);\r\n      });\r\n  }\r\n\r\n  get userRoleButtonTxt() {\r\n    if (this.selectedUser.role === 'ROLE_USER') {\r\n      return 'promote';\r\n    } else {\r\n      return 'demote';\r\n    }\r\n  }\r\n}\r\n","<div class=\"admin-box users-box\">\r\n  <div class=\"left\">\r\n    <header class=\"box-title\"><h2>users</h2></header>\r\n    <div class=\"box-content\">\r\n      <ul class=\"box-top\">\r\n        <li><p>name</p></li>\r\n        <li><p>country</p></li>\r\n        <li><p>email address</p></li>\r\n        <li><p>role</p></li>\r\n      </ul>\r\n      <ul class=\"left-items-container\">\r\n        <li *ngFor=\"let user of users;\" class=\"item {{ user.id === selectedUser?.id ? 'active' : '' }}\" (click)=\"showUser(user)\">\r\n          <ul>\r\n            <li><p>{{ user.name?.firstName && user.name?.firstName ? user.name.firstName.substr(0, 1) + '. ' + user.name.lastName : 'n/a' }}</p></li>\r\n            <li><p>{{ user.address?.country ? user.address.country : 'n/a' }}</p></li>\r\n            <li><p>{{ user.email }}</p></li>\r\n            <li><p>{{ user.role | role}}</p></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"right\">\r\n    <header class=\"box-title\"><h2>user info</h2></header>\r\n    <div class=\"box-content\" *ngIf=\"selectedUser; else noneSelected\">\r\n      <div class=\"user-details\">\r\n        <ul class=\"top-details\">\r\n          <li><p><span>id</span> {{selectedUser.id}}</p></li>\r\n          <li><p><span>email</span> {{selectedUser.email}}</p></li>\r\n          <li><p><span>role</span> {{selectedUser.role | role}}</p></li>\r\n        </ul>\r\n        <div class=\"bottom-details\">\r\n          <ul class=\"bottom-details-left\">\r\n            <li><p><span>street and housenumber</span> {{ selectedUser.address?.streetAndHouseNumber ? selectedUser.address.streetAndHouseNumber : 'n/a' }}</p></li>\r\n            <li><p><span>postal code</span> {{ selectedUser.address?.postalCode ? selectedUser.address.postalCode : 'n/a' }}</p></li>\r\n            <li><p><span>city</span> {{ selectedUser.address?.city ? selectedUser.address.city : 'n/a' }}</p></li>\r\n            <li><p><span>country</span> {{ selectedUser.address?.country ? selectedUser.address.country : 'n/a' }}</p></li>\r\n          </ul>\r\n          <ul class=\"bottom-details-right\">\r\n            <li><p><span>first name</span> {{ selectedUser.name?.firstName ? selectedUser.name.firstName : 'n/a' }}</p></li>\r\n            <li><p><span>last name</span> {{ selectedUser.name?.lastName ? selectedUser.name.lastName : 'n/a' }}</p></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"primary-buttons\">\r\n          <button class=\"delete\" (click)=\"deleteUser()\">delete</button>\r\n          <button (click)=\"updateUserRole()\">{{ userRoleButtonTxt }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #noneSelected><p class=\"noneSelected\">{{ users?.length <= 0 ? 'There are currently no admin-users' : 'Select an user to view it' }}</p></ng-template>\r\n  </div>\r\n</div>\r\n","import {ShoppingCartItem} from './shopping-cart-item.model';\r\nimport {User, UserAddress, UserName} from './user.model';\r\n\r\nexport class Order {\r\n  constructor(public id: string,\r\n              public userId: string,\r\n              public items: ShoppingCartItem[],\r\n              public name: UserName,\r\n              public email: string,\r\n              public address: UserAddress,\r\n              public totalPrice: number,\r\n              public date: number,\r\n              public status: string) {\r\n    this.id = id;\r\n    this.userId = userId;\r\n    this.items = items;\r\n    this.name = name;\r\n    this.email = email;\r\n    this.address = address;\r\n    this.totalPrice = totalPrice;\r\n    this.date = date;\r\n    this.status = status;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shipping-page',\r\n  templateUrl: './shipping-page.component.html',\r\n  styleUrls: ['./shipping-page.component.scss']\r\n})\r\nexport class ShippingPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"shipping-page-wrapper\">\r\n  <header>\r\n    <img src=\"https://media1.tenor.com/images/284a3465336c27b6aaa7a67d3cccf316/tenor.gif?itemid=16746128\" alt=\"d\">\r\n    <h2>oh no! this webshop isn't real!</h2>\r\n    <h4>we did receive your order though, and we might or might not ship it.</h4>\r\n  </header>\r\n  <button [routerLink]=\"['/']\">i refuse to face the truth</button>\r\n</div>\r\n","import {AfterViewInit, Component, DoCheck, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\nimport { ItemService } from '../../../../shared/services/item.service';\r\nimport { Item } from '../../../../shared/models/item.model';\r\nimport {ItemAccessService} from '../../../../shared/services/data-access/item-access.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-item-details',\r\n  templateUrl: './item-details.component.html',\r\n  styleUrls: ['./item-details.component.scss']\r\n})\r\nexport class ItemDetailsComponent implements OnInit {\r\n  @ViewChild('showcased') showcasedEl: ElementRef;\r\n  item: Item;\r\n  id: string;\r\n  showcasedImg: string;\r\n  fadeImg: string;\r\n  playFadeAnimation: boolean;\r\n  selectedSize: string;\r\n  selectedColor: string;\r\n  showNoSizeSelectedError: boolean;\r\n  showNoColorSelectedError: boolean;\r\n  fadeAnimationInterval: number;\r\n  imageHeight: number;\r\n\r\n  constructor(private itemService: ItemService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private dataAccessService: ItemAccessService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n          this.id = params['id'];\r\n          this.loadItem();\r\n        }\r\n      );\r\n  }\r\n\r\n  loadItem(): void {\r\n    const preloadedItem = this.itemService.getItems().find(i => i.id === this.id);\r\n    if (preloadedItem) {\r\n      this.item = preloadedItem;\r\n      this.showcaseImage(this.item.primaryImagePath);\r\n    } else {\r\n      this.dataAccessService.fetchItem(this.id).subscribe(item => {\r\n        this.item = item;\r\n        if (this.item === undefined) {\r\n          this.router.navigate(['404']);\r\n        } else {\r\n          this.showcaseImage(this.item.primaryImagePath);\r\n        }\r\n        // setTimeout(() => {\r\n        //   this.imageHeight = this.showcased.nativeElement.height;\r\n        // }, 500);\r\n      });\r\n    }\r\n  }\r\n\r\n  showcaseImage(secondaryImage: string): void {\r\n    this.fadeInShowcasedImage(secondaryImage);\r\n  }\r\n\r\n  fadeInShowcasedImage(newImage): void {\r\n    if (this.playFadeAnimation) {\r\n      this.fadeImg = newImage;\r\n      this.showcasedImg = newImage;\r\n      clearInterval(this.fadeAnimationInterval);\r\n      this.playFadeAnimation = false;\r\n    } else {\r\n      this.playFadeAnimation = true;\r\n      this.fadeImg = newImage;\r\n      this.fadeAnimationInterval = setInterval(() => {\r\n        this.playFadeAnimation = false;\r\n        this.showcasedImg = newImage;\r\n        clearInterval(this.fadeAnimationInterval);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  onColorClicked(color): void {\r\n    if (this.selectedColor === color) {\r\n      this.selectedColor = null;\r\n    } else {\r\n      this.selectedColor = color;\r\n    }\r\n  }\r\n\r\n  onSizeClicked(size) {\r\n    if (this.selectedSize === size) {\r\n      this.selectedSize = null;\r\n    } else {\r\n      this.selectedSize = size;\r\n    }\r\n  }\r\n\r\n  onBuy() {\r\n    this.showNoSizeSelectedError = !this.selectedSize;\r\n    if (this.showNoSizeSelectedError) { return; }\r\n    this.showNoColorSelectedError = !this.selectedColor;\r\n    if (this.showNoColorSelectedError) { return; }\r\n\r\n    this.itemService.addItemToShoppingList(this.item, {selectedSize: this.selectedSize, selectedColor: this.selectedColor});\r\n    this.router.navigate(['shopping-list']);\r\n  }\r\n\r\n  onEditItem() {\r\n    this.router.navigate(['edit'], {relativeTo: this.route});\r\n    // this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route});\r\n  }\r\n\r\n  onResized() {\r\n    this.imageHeight = this.showcasedEl.nativeElement.height;\r\n  }\r\n}\r\n","<div id=\"details\" *ngIf=\"item\">\r\n  <div id=\"images\">\r\n    <div id=\"side-images\" [style.max-height.px]=\"imageHeight\">\r\n      <ul>\r\n        <li (mouseover)=\"showcaseImage(item.primaryImagePath)\">\r\n          <img src=\"{{ item.primaryImagePath }}\" alt=\"Primary image\">\r\n        </li>\r\n        <li *ngFor=\"let secondaryImage of item.secondaryImagePaths\" (mouseenter)=\"showcaseImage(secondaryImage)\">\r\n          <img src=\"{{ secondaryImage }}\" alt=\"Secondary image\">\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div id=\"showcase-image\" (resized)=\"onResized()\" *ngIf=\"showcasedImg\">\r\n      <img id=\"showcased-img\" [src]=\"[showcasedImg]\" alt=\"{{item.name}} image\" #showcased>\r\n      <img id=\"fade-img\" [style.opacity]=\"playFadeAnimation ? 1 : 0\" [src]=\"fadeImg\" alt=\"{{item.name}} image\">\r\n    </div>\r\n  </div>\r\n  <div id=\"content\">\r\n    <header>\r\n      <h1 id=\"title\">{{ item.name }}</h1>\r\n      <p id=\"price\">${{ item.price }}</p>\r\n    </header>\r\n\r\n    <div id=\"options\">\r\n      <div id=\"size\">\r\n        <p class=\"{{ showNoSizeSelectedError && !selectedSize ? 'red-text' : '' }}\">size</p>\r\n        <div id=\"sizes\">\r\n          <button *ngFor=\"let size of item.sizes\" (click)=\"onSizeClicked(size)\"\r\n                  class=\"{{ size === selectedSize ? 'selected-option-box' : '' }} {{ showNoSizeSelectedError && !selectedSize ? 'no-option-selected' : '' }}\">\r\n            {{ size }} </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"color\">\r\n        <p class=\"{{ showNoColorSelectedError && !selectedColor ? 'red-text' : '' }}\">color</p>\r\n        <div id=\"colors\">\r\n          <button *ngFor=\"let color of item.colors\" (click)=\"onColorClicked(color)\"\r\n                  class=\"{{ color === selectedColor ? 'selected-option-box' : '' }} {{ showNoColorSelectedError && !selectedColor ? 'no-option-selected' : '' }}\">\r\n            {{ color }} </button>\r\n        </div>\r\n      </div>\r\n      <button id=\"buy\" (click)=\"onBuy()\">add to cart</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {DataStorageService} from '../services/data-storage.service';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private dataStorageService: DataStorageService, private router: Router, private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ): boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return true;\r\n    }\r\n    this.authService.showLogin.next(true);\r\n    return this.router.createUrlTree(['/']);\r\n  }\r\n}\r\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {ShoppingListService} from '../shared/services/shopping-list.service';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {User} from '../shared/models/user.model';\r\nimport {DataStorageService} from '../shared/services/data-storage.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  shoppingCartSize: number;\r\n  userSub = new Subscription();\r\n  user: User;\r\n\r\n  constructor(private slService: ShoppingListService, private dataStorageService: DataStorageService,\r\n              private router: Router, private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.shoppingCartSize = this.slService.getItems().length;\r\n    this.slService.shoppingCartChanged.subscribe(data =>  {\r\n      this.shoppingCartSize = data.length;\r\n    });\r\n\r\n    this.userSub = this.dataStorageService.user\r\n      .subscribe((user) => {\r\n        this.user = user;\r\n      });\r\n  }\r\n\r\n  onLoginClicked(): void {\r\n    this.authService.showLogin.next(true);\r\n  }\r\n\r\n  onLogoutClicked(): void {\r\n    this.router.navigate(['/']).then(() => {\r\n      this.authService.logout();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<nav>\r\n  <div id=\"background\"></div>\r\n  <div id=\"nav-logo\">\r\n    <a [routerLink]=\"['/']\"><img src=\"../../assets/images/logo.svg\" alt=\"Sekkie\"></a>\r\n  </div>\r\n  <div id=\"nav-links\">\r\n    <ul>\r\n      <li id=\"shopping-cart\"><a [routerLink]=\"['../shopping-list']\"><img src=\"../../assets/images/shoppingcart.svg\" alt=\"cart\">cart ({{ shoppingCartSize }})</a></li>\r\n      <li id=\"login\" *ngIf=\"!user\"><a (click)=\"onLoginClicked()\">login/register</a></li>\r\n      <li id=\"admin\" *ngIf=\"user && user.role === 'ROLE_ADMIN'\"><a [routerLink]=\"['/admin']\">admin</a></li>\r\n      <li id=\"account\" *ngIf=\"user\"><a [routerLink]=\"['/account']\">account</a></li>\r\n      <li id=\"logout\" *ngIf=\"user\"><a (click)=\"onLogoutClicked()\">logout</a></li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, pipe, throwError} from 'rxjs';\r\nimport {User} from '../../models/user.model';\r\nimport {GenericAccessService} from './generic-access.service';\r\nimport {Order} from '../../models/order.model';\r\n\r\nexport interface AuthResponseData {\r\n  token: string;\r\n  refreshToken: string;\r\n  user: User;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserAccessService {\r\n  constructor(private http: HttpClient, private genericAccessService: GenericAccessService) { }\r\n\r\n  registerUser(email: string, password: string): Observable<AuthResponseData> {\r\n    const body = { email, password };\r\n    return this.genericAccessService.sendPOST<AuthResponseData>('users/register', body, false);\r\n  }\r\n\r\n  loginUser(email: string, password: string): Observable<AuthResponseData> {\r\n    const body = { email, password };\r\n    return this.genericAccessService.sendPOST<AuthResponseData>('users/authenticate', body, false);\r\n  }\r\n\r\n  updateUserDetails(user: User) {\r\n    const body = {\r\n      id: user.id,\r\n      email: user.email,\r\n      name: user.name,\r\n      address: user.address\r\n    };\r\n    return this.genericAccessService.sendPUT<any>('users/profile', body, true);\r\n  }\r\n\r\n  updateUserRole(user: User): Observable<User> {\r\n    const body = { user };\r\n    return this.genericAccessService.sendUserSpecificPUT<User>('users/', body);\r\n  }\r\n\r\n  fetchUsers(): Observable<User[]> {\r\n    return this.genericAccessService.sendUserSpecificGET<User[]>('users/');\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.genericAccessService.sendUserSpecificDELETE<any>('users/' + userId);\r\n  }\r\n\r\n  verifyUser(): Observable<AuthResponseData> {\r\n    return this.genericAccessService.sendGET<AuthResponseData>('users/profile/', true);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unknown-page',\n  templateUrl: './unknown-page.component.html',\n  styleUrls: ['./unknown-page.component.css']\n})\nexport class UnknownPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>unknown-page works!</p>\n","import {Component, OnInit} from '@angular/core';\r\nimport {skipWhile, take} from 'rxjs/operators';\r\nimport {User, UserAddress, UserName} from '../shared/models/user.model';\r\nimport {NgForm} from '@angular/forms';\r\nimport {DataStorageService} from '../shared/services/data-storage.service';\r\nimport {OrderAccessService} from '../shared/services/data-access/order-access.service';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {UserAccessService} from '../shared/services/data-access/user-access.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  user: User;\r\n  orders: Order[];\r\n\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private orderAccessService: OrderAccessService, private userAccessService: UserAccessService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataStorageService.user.pipe(skipWhile(user => !user), take(1))\r\n      .subscribe(user => {\r\n        this.user = user;\r\n        this.orderAccessService.fetchOrdersByUserId(user.id)\r\n          .subscribe((orders) => {\r\n            this.orders = orders;\r\n          });\r\n      });\r\n  }\r\n\r\n  onUpdateAccountInfo(form: NgForm): void {\r\n    this.user.name = {\r\n      firstName: form.value.firstName,\r\n      lastName: form.value.lastName\r\n    };\r\n    this.user.address = {\r\n      streetAndHouseNumber: form.value.streetAndHouseNumber,\r\n      city: form.value.city,\r\n      country: form.value.country,\r\n      postalCode: form.value.postalCode,\r\n    };\r\n\r\n    this.userAccessService.updateUserDetails(this.user).subscribe((res) => {\r\n      localStorage.setItem('token', res.token);\r\n      this.dataStorageService.user.next(res.user);\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"user\" id=\"account-wrapper\">\r\n  <h1>my account</h1>\r\n  <div id=\"shipping-info-container\">\r\n    <div class=\"box-content\">\r\n      <header>\r\n        <h2>details</h2>\r\n      </header>\r\n      <form #accountInfoForm=\"ngForm\" class=\"shipping-info-form\" (ngSubmit)=\"onUpdateAccountInfo(accountInfoForm)\">\r\n        <div id=\"static-details\">\r\n          <div class=\"shipping-info-row\">\r\n            <div class=\"shipping-info-column\">\r\n              <p class=\"info-header\">email</p>\r\n              <p class=\"info-value\">{{ user.email }}</p>\r\n            </div>\r\n            <div class=\"shipping-info-column column-right\">\r\n              <p class=\"info-header\">role</p>\r\n              <p class=\"info-value\">{{ user.role | role }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column half-column\">\r\n            <label class=\"info-label\" for=\"firstName\">\r\n              first name\r\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" class=\"form-control\" [ngModel]=\"user.name?.firstName\">\r\n            </label>\r\n          </div>\r\n          <div class=\"shipping-info-column column-right half-column\">\r\n            <label class=\"info-label\" for=\"lastName\">\r\n              last name\r\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" class=\"form-control\" [ngModel]=\"user.name?.lastName\">\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column full-column\">\r\n            <label class=\"info-label\" for=\"streetAndHouseNumber\">\r\n              street and house number\r\n              <input type=\"text\" id=\"streetAndHouseNumber\" name=\"streetAndHouseNumber\" class=\"form-control\" [ngModel]=\"user.address?.streetAndHouseNumber\">\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column half-column\">\r\n            <label class=\"info-label\" for=\"postalCode\">\r\n              postal code\r\n              <input type=\"text\" id=\"postalCode\" name=\"postalCode\" class=\"form-control\" [ngModel]=\"user.address?.postalCode\">\r\n            </label>\r\n          </div>\r\n          <div class=\"shipping-info-column column-right half-column\">\r\n            <label class=\"info-label\" for=\"city\">\r\n              city\r\n              <input type=\"text\" id=\"city\" name=\"city\" class=\"form-control\" [ngModel]=\"user.address?.city\">\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column full-column\">\r\n            <label class=\"info-label\" for=\"country\">\r\n              country\r\n              <input type=\"text\" id=\"country\" name=\"country\" class=\"form-control\" [ngModel]=\"user.address?.country\">\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"continue\">\r\n          <button>update</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"orders-container\">\r\n    <app-orders-box [orders]=\"orders\"></app-orders-box>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Item} from '../../shared/models/item.model';\r\nimport {ItemAccessService} from '../../shared/services/data-access/item-access.service';\r\nimport {DataStorageService} from '../../shared/services/data-storage.service';\r\nimport {skipWhile, take} from 'rxjs/operators';\r\nimport {NgForm} from '@angular/forms';\r\nimport {ItemService} from '../../shared/services/item.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-items',\r\n  templateUrl: './admin-items.component.html',\r\n  styleUrls: ['./admin-items.component.scss']\r\n})\r\nexport class AdminItemsComponent implements OnInit {\r\n  items: Item[];\r\n  selectedItem: Item;\r\n  creatingItem: boolean;\r\n  categories: string[] = this.itemService.categories;\r\n  collections: string[] = this.itemService.collections;\r\n\r\n  constructor(private itemAccessService: ItemAccessService, private dataStorageService: DataStorageService,\r\n              private itemService: ItemService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataStorageService.user.pipe(skipWhile(item => !item), take(1))\r\n      .subscribe(() => {\r\n        this.itemAccessService.fetchItems()\r\n          .subscribe((items) => {\r\n            this.items = items;\r\n            this.selectedItem = items[0];\r\n          });\r\n      });\r\n  }\r\n\r\n  showItem(item: Item): void {\r\n    this.selectedItem = item;\r\n    if (this.creatingItem) { this.creatingItem = false; }\r\n  }\r\n\r\n  deleteItem(): void {\r\n    this.itemAccessService.deleteItem(this.selectedItem.id)\r\n      .subscribe(() => {\r\n        const index = this.items.indexOf(this.selectedItem, 0);\r\n        if (index > -1) {\r\n          this.items.splice(index, 1);\r\n        }\r\n        this.selectedItem = null;\r\n      });\r\n  }\r\n\r\n  createItem(): void {\r\n    this.creatingItem = true;\r\n    this.selectedItem = new Item(\r\n      null, null, null, null, null, null, null, null , null\r\n    );\r\n  }\r\n\r\n  saveItem(form: NgForm): void {\r\n    this.selectedItem.name = form.value.title;\r\n    this.selectedItem.primaryImagePath = form.value.primaryImage;\r\n    this.selectedItem.price = form.value.price;\r\n    this.selectedItem.secondaryImagePaths = this.findSecondaryImages(form.value.secondaryImages);\r\n    this.selectedItem.sizes = this.findSizes(form.value.sizes);\r\n    this.selectedItem.colors = this.findColors(form.value.colors);\r\n\r\n    if (this.creatingItem) {\r\n      this.itemAccessService.createItem(this.selectedItem)\r\n        .subscribe((newItem) => {\r\n          this.creatingItem = false;\r\n          this.selectedItem = null;\r\n          this.items.push(newItem);\r\n        });\r\n      return;\r\n    }\r\n    this.itemAccessService.updateItem(this.selectedItem)\r\n      .subscribe();\r\n  }\r\n\r\n  findColors(colors: string | string[]) {\r\n    if (!Array.isArray(colors)) {\r\n      colors = colors\r\n        .replace(/ , | ,|, /g, ',')\r\n        .split(',');\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  findSizes(sizes: string | string[]) {\r\n    if (!Array.isArray(sizes)) {\r\n      sizes = sizes\r\n        .replace(/\\s/g, '')\r\n        .split(',');\r\n    }\r\n    return sizes;\r\n  }\r\n\r\n  findSecondaryImages(secondaryImages: string | string[]) {\r\n    if (!Array.isArray(secondaryImages)) {\r\n      secondaryImages = secondaryImages\r\n        .replace(/\\s/g, '')\r\n        .split(',')\r\n        .filter(Boolean);\r\n    }\r\n    return secondaryImages;\r\n  }\r\n\r\n  get colors() {\r\n    if (!this.selectedItem.colors) { return null; }\r\n    return this.selectedItem.colors.join(', ');\r\n  }\r\n\r\n  get secondaryImages() {\r\n    if (!this.selectedItem.secondaryImagePaths) { return null; }\r\n    return this.selectedItem.secondaryImagePaths.join(',\\n');\r\n  }\r\n\r\n  get sizes() {\r\n    if (!this.selectedItem.colors) { return null; }\r\n    return this.selectedItem.sizes.join(', ');\r\n  }\r\n}\r\n","<div class=\"admin-box items-box\">\r\n  <div class=\"left\">\r\n    <header class=\"box-title\"><h2>items</h2></header>\r\n    <div class=\"box-content\">\r\n      <ul class=\"box-top\">\r\n        <li><p>name</p></li>\r\n        <li><p>collection</p></li>\r\n      </ul>\r\n      <ul class=\"left-items-container\">\r\n        <li *ngFor=\"let item of items;\" class=\"item {{ item.id === selectedItem?.id ? 'active' : '' }}\" (click)=\"showItem(item)\">\r\n          <ul>\r\n            <li><p>{{ item.name }}</p></li>\r\n            <li><p>{{ item.clothingCollection }}</p></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <button class=\"fab\" (click)=\"createItem()\">+</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"right\">\r\n    <header class=\"box-title\"><h2>{{ !creatingItem ? 'item info' : 'create item' }}</h2></header>\r\n    <div class=\"box-content\" *ngIf=\"selectedItem; else noneSelected\">\r\n      <div class=\"item-details\">\r\n        <form class=\"item-attributes\" #itemForm=\"ngForm\">\r\n          <div class=\"attributes-c1\">\r\n            <div class=\"attributes-r1\">\r\n              <ul>\r\n                <li>\r\n                  <label for=\"title\">title</label>\r\n                  <input type=\"text\" id=\"title\" name=\"title\" class=\"form-control\" [ngModel]=\"selectedItem?.name\" required>\r\n                </li>\r\n                <li>\r\n                  <label for=\"primaryImage\">primary image</label>\r\n                  <input type=\"text\" id=\"primaryImage\" name=\"primaryImage\" class=\"form-control\" [ngModel]=\"selectedItem?.primaryImagePath\" required>\r\n                </li>\r\n                <li>\r\n                  <label for=\"secondaryImages\">secondary images <span>(comma separated)</span></label>\r\n                  <textarea id=\"secondaryImages\"  name=\"secondaryImages\" class=\"form-control\" rows=\"7\" cols=\"60\" [ngModel]=\"secondaryImages\"></textarea>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"attributes-r2\">\r\n              <ul>\r\n                <li>\r\n                  <label for=\"price\">price <span>(usd)</span></label>\r\n                  <input type=\"number\" id=\"price\" name=\"price\" class=\"form-control\" [ngModel]=\"selectedItem?.price\" required>\r\n                </li>\r\n                <li>\r\n                  <label for=\"sizes\">sizes <span>(comma separated)</span></label>\r\n                  <input type=\"text\" id=\"sizes\" name=\"sizes\" class=\"form-control\" [ngModel]=\"sizes\" required>\r\n                </li>\r\n                <li>\r\n                  <label for=\"colors\">colors <span>(comma separated)</span></label>\r\n                  <input type=\"text\" id=\"colors\" name=\"colors\" class=\"form-control\" [ngModel]=\"colors\" required>\r\n                </li>\r\n                <li *ngIf=\"!creatingItem\">\r\n                  <label>id</label>\r\n                  <p>{{ selectedItem.id }}</p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"attributes-c2\">\r\n            <label>category</label>\r\n            <ul class=\"categories\">\r\n              <li *ngFor=\"let category of categories\">\r\n                <button (click)=\"selectedItem.category = category\" class=\"{{ selectedItem.category === category ? 'selected' : '' }}\">{{ category }}</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"attributes-c3\">\r\n            <label>collection</label>\r\n            <ul class=\"categories\">\r\n              <li *ngFor=\"let collection of collections\">\r\n                <button (click)=\"selectedItem.clothingCollection = collection\" class=\"{{ selectedItem.clothingCollection === collection ? 'selected' : '' }}\">{{ collection }}</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"primary-buttons\">\r\n            <button class=\"delete\" (click)=\"deleteItem()\" *ngIf=\"!creatingItem\">delete</button>\r\n            <button [disabled]=\"!itemForm.valid || !this.selectedItem.category\" (click)=\"saveItem(itemForm)\">{{ !creatingItem ? 'update' : 'create' }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <ng-template #noneSelected><p class=\"noneSelected\">{{ items?.length <= 0 ? 'There are currently no admin-items' : 'Select an item to view it' }}</p></ng-template>\r\n  </div>\r\n</div>\r\n","import {Inject, Injectable} from '@angular/core';\r\n\r\nimport { Item } from '../models/item.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ShoppingCartItem } from '../models/shopping-cart-item.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ShoppingListService {\r\n  shoppingCartChanged = new Subject<ShoppingCartItem[]>();\r\n  private shoppingCartItems: ShoppingCartItem[] = [];\r\n\r\n  fetchLocalStorageCart(): void {\r\n    const localStorageItems = localStorage.getItem('cart');\r\n    if (localStorageItems) {\r\n      this.setItems(JSON.parse(localStorageItems));\r\n    }\r\n  }\r\n\r\n  updateLocalStorageCart(): void {\r\n    localStorage.setItem('cart', JSON.stringify(this.shoppingCartItems));\r\n  }\r\n\r\n  getItems() {\r\n    return this.shoppingCartItems.slice();\r\n  }\r\n\r\n  setItems(items): void {\r\n    this.shoppingCartItems = items;\r\n    this.shoppingCartChanged.next(this.shoppingCartItems.slice());\r\n  }\r\n\r\n  removeItem(item): void {\r\n    this.shoppingCartItems.splice(this.shoppingCartItems.indexOf(item), 1);\r\n    this.shoppingCartChanged.next(this.shoppingCartItems.slice());\r\n    this.updateLocalStorageCart();\r\n  }\r\n\r\n  addItem(item: Item, {selectedSize, selectedColor}) {\r\n    const shoppingCartItem = new ShoppingCartItem(\r\n      item.id,\r\n      item.name,\r\n      item.price,\r\n      item.price,\r\n      item.primaryImagePath,\r\n      selectedSize,\r\n      selectedColor,\r\n      1);\r\n    this.shoppingCartItems.push(shoppingCartItem);\r\n    this.shoppingCartChanged.next(this.shoppingCartItems.slice());\r\n    this.updateLocalStorageCart();\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {DataStorageService} from '../../shared/services/data-storage.service';\r\nimport {User, UserAddress, UserName} from '../../shared/models/user.model';\r\nimport {NgForm} from '@angular/forms';\r\nimport {AuthService} from '../../shared/services/auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ShoppingCartItem} from '../../shared/models/shopping-cart-item.model';\r\nimport {OrderService} from '../../shared/services/order.service';\r\nimport {Order} from '../../shared/models/order.model';\r\nimport {DatePipe} from '@angular/common';\r\nimport {OrderAccessService} from '../../shared/services/data-access/order-access.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-order-page',\r\n  templateUrl: './order-page.component.html',\r\n  styleUrls: ['./order-page.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class OrderPageComponent implements OnInit, OnDestroy {\r\n  user: User;\r\n  userSub: Subscription = new Subscription();\r\n  orderItems: ShoppingCartItem[];\r\n  order: Order;\r\n\r\n  constructor(private dataStorageService: DataStorageService, private authService: AuthService,\r\n              private orderService: OrderService, private datePipe: DatePipe, private orderAccessService: OrderAccessService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.dataStorageService.user.getValue()) {\r\n      this.user = this.dataStorageService.user.getValue();\r\n    } else {\r\n      const emptyName: UserName = {\r\n        firstName: null,\r\n        lastName: null\r\n      };\r\n      const emptyAddress: UserAddress = {\r\n        streetAndHouseNumber: null,\r\n        postalCode: null,\r\n        city: null,\r\n        country: null\r\n      };\r\n      this.user = new User(null, null, emptyName, null, emptyAddress, null);\r\n      // In case user logs in while checking out\r\n      this.userSub = this.dataStorageService.user\r\n        .subscribe((user) => {\r\n          if (user) {\r\n            this.user = user;\r\n          }\r\n        });\r\n    }\r\n\r\n    this.orderItems = this.orderService.shoppingCartItems;\r\n  }\r\n\r\n  createOrder(form: NgForm): void {\r\n    if (!form.valid) {\r\n      alert('The form is not valid.');\r\n      return;\r\n    }\r\n\r\n    // Retrieve form values\r\n    this.user.email = form.value.email;\r\n    this.user.name = {\r\n      firstName: form.value.firstName,\r\n      lastName: form.value.lastName\r\n    };\r\n    this.user.address = {\r\n      streetAndHouseNumber: form.value.streetAndHouseNumber,\r\n      city: form.value.city,\r\n      country: form.value.country,\r\n      postalCode: form.value.postalCode,\r\n    };\r\n\r\n    let totalPrice = 0;\r\n    this.orderItems.forEach((item) => {\r\n      totalPrice = totalPrice + item.totalPrice;\r\n    });\r\n\r\n    let userId;\r\n    if (this.dataStorageService.user.getValue()) {\r\n      userId = this.user.id;\r\n    } else {\r\n      userId = null;\r\n    }\r\n    this.order = new Order(\r\n      null, userId, this.orderItems, this.user.name, this.user.email, this.user.address, totalPrice, Date.now(), 'ON_HOLD'\r\n    );\r\n\r\n    this.orderAccessService.createOrder(this.order)\r\n      .subscribe((newOrder) => {\r\n        if (newOrder) {\r\n          this.router.navigate(['/shipping']);\r\n        }\r\n      });\r\n  }\r\n\r\n  showLogin() {\r\n    this.authService.showLogin.next(true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<div id=\"shipping-wrapper\" *ngIf=\"orderItems\">\r\n  <header>\r\n    <h1>checkout</h1>\r\n    <p><span>information ></span> shipping > payment</p>\r\n  </header>\r\n  <div id=\"shipping-info-container\">\r\n    <div class=\"box-content\">\r\n      <form #shippingInfoForm=\"ngForm\" class=\"shipping-info-form\" (ngSubmit)=\"createOrder(shippingInfoForm)\">\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column full-column\">\r\n            <label class=\"info-label\" for=\"email\">\r\n              email <span>have an account? <a (click)=\"showLogin()\">log in</a></span>\r\n              <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control\" [ngModel]=\"user.email\" required>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column half-column\">\r\n            <label class=\"info-label\" for=\"firstName\">\r\n              first name\r\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" class=\"form-control\" [ngModel]=\"user.name?.firstName\" required>\r\n            </label>\r\n          </div>\r\n          <div class=\"shipping-info-column column-right half-column\">\r\n            <label class=\"info-label\" for=\"lastName\">\r\n              last name\r\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" class=\"form-control\" [ngModel]=\"user.name?.lastName\" required>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column full-column\">\r\n            <label class=\"info-label\" for=\"streetAndHouseNumber\">\r\n              street and house number\r\n              <input type=\"text\" id=\"streetAndHouseNumber\" name=\"streetAndHouseNumber\" class=\"form-control\" [ngModel]=\"user.address?.streetAndHouseNumber\" required>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column half-column\">\r\n            <label class=\"info-label\" for=\"postalCode\">\r\n              postal code\r\n              <input type=\"text\" id=\"postalCode\" name=\"postalCode\" class=\"form-control\" [ngModel]=\"user.address?.postalCode\" required>\r\n            </label>\r\n          </div>\r\n          <div class=\"shipping-info-column column-right half-column\">\r\n            <label class=\"info-label\" for=\"city\">\r\n              city\r\n              <input type=\"text\" id=\"city\" name=\"city\" class=\"form-control\" [ngModel]=\"user.address?.city\" required>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"shipping-info-row\">\r\n          <div class=\"shipping-info-column full-column\">\r\n            <label class=\"info-label\" for=\"country\">\r\n              country\r\n              <input type=\"text\" id=\"country\" name=\"country\" class=\"form-control\" [ngModel]=\"user.address?.country\" required>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"continue\">\r\n          <button [disabled]=\"!shippingInfoForm.valid\">continue</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {Item} from '../models/item.model';\r\nimport {ShoppingListService} from './shopping-list.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ItemService {\r\n  categories: string[] = ['outerwear', 'tops', 'pants', 'accessories'];\r\n  collections: string[] = ['f/w 20', 's/s 21'];\r\n\r\n  private items: Item[] = [];\r\n\r\n  constructor(private slService: ShoppingListService) { }\r\n\r\n  setItems(items: Item[]) {\r\n    this.items = items;\r\n  }\r\n\r\n  getItems() {\r\n    return this.items.slice();\r\n  }\r\n\r\n  addItemToShoppingList(item: Item, {selectedSize, selectedColor}) {\r\n    this.slService.addItem(item, {selectedSize, selectedColor});\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Item} from '../../shared/models/item.model';\r\nimport {ItemService} from '../../shared/services/item.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ItemAccessService} from '../../shared/services/data-access/item-access.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {FiltersService} from '../../shared/services/filters-service';\r\n\r\n@Component({\r\n  selector: 'app-item-list',\r\n  templateUrl: './item-list.component.html',\r\n  styleUrls: ['./item-list.component.scss']\r\n})\r\nexport class ItemListComponent implements OnInit, OnDestroy {\r\n  items: Item[];\r\n  searchValue = '';\r\n  isFetchingItems: boolean;\r\n  private itemsFilteredSub: Subscription;\r\n\r\n  constructor(private itemService: ItemService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private dataAccessService: ItemAccessService,\r\n              private filtersService: FiltersService) { }\r\n\r\n  ngOnInit() {\r\n    // Only fetch if there hasn't been fetched yet\r\n    if (this.itemService.getItems().length < 1) {\r\n      this.isFetchingItems = true;\r\n      this.dataAccessService.fetchItems()\r\n        .subscribe((items) => {\r\n          this.isFetchingItems = false;\r\n          this.items = items;\r\n          this.itemService.setItems(items);\r\n        });\r\n    }\r\n\r\n    // Filters have been added\r\n    this.itemsFilteredSub = this.filtersService.itemsFiltered\r\n      .subscribe((filteredItems) => {\r\n        this.items = filteredItems;\r\n        this.searchValue = this.filtersService.searchValue.getValue();\r\n      });\r\n  }\r\n\r\n  onNewItem() {\r\n    this.router.navigate(['new'], {relativeTo: this.route});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.itemsFilteredSub.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"items?.length <= 0 && !isFetchingItems\" id=\"no-items-found\">\r\n  <p>{{searchValue ? 'No items containing \\'' + searchValue + '\\' were found..' : 'No items were found..'}}</p>\r\n</div>\r\n<div id=\"items-wrapper\">\r\n  <app-item-list-item\r\n    *ngFor=\"let item of items; let i = index\"\r\n    [item]=\"item\"></app-item-list-item>\r\n  <div class=\"loading-spinners-wrapper\" *ngIf=\"isFetchingItems\">\r\n    <div class=\"loading-spinner\" *ngFor=\"let item of [].constructor(12); let i = index\">\r\n      <app-loading-spinner></app-loading-spinner>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {DataStorageService} from '../services/data-storage.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private dataStorageService: DataStorageService, private router: Router, private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ): boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n    return this.dataStorageService.user\r\n      .pipe(map((user) => {\r\n        if (user) {\r\n          const isAdmin = user.role === 'ROLE_ADMIN';\r\n          if (isAdmin) {\r\n            return true;\r\n          }\r\n        }\r\n        // User isn't logged in\r\n        if (!localStorage.getItem('token')) {\r\n          this.authService.showLogin.next(true);\r\n        }\r\n        return this.router.createUrlTree(['/']);\r\n      }));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {User} from '../models/user.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DataStorageService {\r\n  user = new BehaviorSubject<User>(null);\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\n\r\nimport { ShoppingListService } from '../shared/services/shopping-list.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ShoppingCartItem } from '../shared/models/shopping-cart-item.model';\r\nimport {OrderService} from '../shared/services/order.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-shopping-list',\r\n  templateUrl: './shopping-list.component.html',\r\n  styleUrls: ['./shopping-list.component.scss']\r\n})\r\nexport class ShoppingListComponent implements OnInit, OnDestroy {\r\n  shoppingCartItems: ShoppingCartItem[];\r\n  private itemsChangedSub: Subscription;\r\n\r\n  constructor(private slService: ShoppingListService, private orderService: OrderService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.shoppingCartItems = this.slService.getItems();\r\n    this.itemsChangedSub = this.slService.shoppingCartChanged\r\n      .subscribe(\r\n        (items: ShoppingCartItem[]) => {\r\n          this.shoppingCartItems = items;\r\n        }\r\n      );\r\n  }\r\n\r\n  checkout() {\r\n    if (this.shoppingCartItems.length < 1) {\r\n      return;\r\n    }\r\n    this.orderService.shoppingCartItems = this.shoppingCartItems;\r\n    this.router.navigate(['/order']);\r\n  }\r\n\r\n  calculateTotalPrice(): number {\r\n    let total = 0;\r\n    this.slService.getItems().forEach((item) => {\r\n      total = total + item.price * item.selectedAmount;\r\n    });\r\n    return total;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.itemsChangedSub.unsubscribe();\r\n  }\r\n}\r\n","<div id=\"shopping-cart-wrapper\">\r\n  <header>\r\n    <h1>shopping cart</h1>\r\n    <h4>{{shoppingCartItems.length}} item{{shoppingCartItems.length === 1 ? '' : 's'}}</h4>\r\n  </header>\r\n  <div id=\"shopping-cart-items\">\r\n    <app-shopping-cart-item *ngFor=\"let item of shoppingCartItems\" [item]=\"item\"></app-shopping-cart-item>\r\n  </div>\r\n  <div id=\"bottom-bar\">\r\n    <div class=\"bottom-bar-column\">\r\n      <button id=\"back\" [routerLink]=\"['../']\">go back</button>\r\n    </div>\r\n    <div class=\"bottom-bar-column\">\r\n      <div id=\"bottom-bar-middle\">\r\n        <p id=\"total-shipping\">total {{ calculateTotalPrice() }} USD</p>\r\n        <p id=\"total-disclaimer\">* excluding shipping</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom-bar-column\">\r\n      <button id=\"checkout\" (click)=\"checkout()\">checkout</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\r\nimport { ItemDetailsComponent } from './shop/item-list/item-list-item/item-details/item-details.component';\r\nimport { UnknownPageComponent } from './unknown-page/unknown-page.component';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {AuthGuard} from './shared/guard/auth.guard';\r\nimport {OrderPageComponent} from './shopping-list/order-page/order-page.component';\r\nimport {ShippingPageComponent} from './shopping-list/order-page/shipping-page/shipping-page.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {AdminGuard} from './shared/guard/admin.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/shop', pathMatch: 'full' },\r\n  { path: 'shop', component: ShopComponent },\r\n  { path: 'shopping-list', component: ShoppingListComponent },\r\n  { path: 'order', component: OrderPageComponent },\r\n  { path: 'shipping', component: ShippingPageComponent },\r\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard] },\r\n  { path: 'admin', component: AdminComponent, canActivate: [AdminGuard] },\r\n  { path: '404', component: UnknownPageComponent },\r\n  { path: ':id', component: ItemDetailsComponent },\r\n  { path: '**', redirectTo: '/shop' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, {scrollPositionRestoration: 'enabled'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {Component, ElementRef, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {AuthService} from '../shared/services/auth.service';\r\nimport {UserAccessService} from '../shared/services/data-access/user-access.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @ViewChild('overlay') overlay: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2, private userAccessService: UserAccessService,\r\n              private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initOutsideClickListener();\r\n  }\r\n\r\n  initOutsideClickListener(): void {\r\n    this.renderer.listen('window', 'mousedown', (e: Event) => {\r\n      if (e.target === this.overlay.nativeElement) {\r\n        this.authService.showLogin.next(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  onRegister(form: NgForm): void {\r\n    if (!form.valid) { return; }\r\n    const email = form.value.registerEmail;\r\n    const password = form.value.registerPassword;\r\n\r\n    this.authService.signup(email, password)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/account']);\r\n        this.authService.showLogin.next(false);\r\n      }, errorMsg => {\r\n        alert(errorMsg);\r\n      });\r\n\r\n    form.reset();\r\n  }\r\n\r\n  onLogin(form: NgForm): void {\r\n    if (!form.valid) { return; }\r\n    const email = form.value.loginEmail;\r\n    const password = form.value.loginPassword;\r\n\r\n    this.authService.login(email, password)\r\n      .subscribe(() => {\r\n        this.authService.showLogin.next(false);\r\n      }, errorMsg => {\r\n        alert(errorMsg);\r\n      });\r\n\r\n    form.reset();\r\n  }\r\n\r\n}\r\n","<div id=\"overlay\" #overlay>\r\n  <div id=\"login-container\">\r\n    <div id=\"login\">\r\n      <h3>login</h3>\r\n      <form #loginForm=\"ngForm\" class=\"login-form\" (ngSubmit)=\"onLogin(loginForm)\">\r\n        <label for=\"loginEmail\">email address *</label>\r\n        <input class=\"login-input form-control\" type=\"email\" id=\"loginEmail\" name=\"loginEmail\" ngModel required email>\r\n        <label for=\"loginPassword\">password *</label>\r\n        <input class=\"login-input form-control\" type=\"password\" id=\"loginPassword\" name=\"loginPassword\" ngModel required>\r\n        <button [disabled]=\"!loginForm.valid\">log in</button>\r\n      </form>\r\n    </div>\r\n    <span class=\"vertical-line\"></span>\r\n    <div id=\"register\">\r\n      <h3>register</h3>\r\n      <form #registerForm=\"ngForm\" class=\"login-form\" (ngSubmit)=\"onRegister(registerForm)\">\r\n        <label for=\"registerEmail\">email address *</label>\r\n        <input class=\"form-control\" type=\"email\" id=\"registerEmail\" name=\"registerEmail\" ngModel required email>\r\n        <label for=\"registerPassword\">password *</label>\r\n        <input class=\"form-control\" type=\"password\" id=\"registerPassword\" name=\"registerPassword\" ngModel required  minlength=\"4\">\r\n        <button [disabled]=\"!registerForm.valid\">register</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'status'\r\n})\r\nexport class StatusPipe implements PipeTransform {\r\n  transform(value: any) {\r\n    switch (value) {\r\n      case 'ON_HOLD':\r\n        return 'On Hold';\r\n      case 'SHIPPING':\r\n        return 'Shipping';\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.itemion) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html'\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"loadingio-spinner-rolling-als0qk4r0ew\"><div class=\"ldio-ys9jpbnpb6o\">\r\n  <div></div>\r\n</div></div>\r\n<style type=\"text/css\">\r\n  @keyframes ldio-ys9jpbnpb6o {\r\n    0% { transform: translate(-50%,-50%) rotate(0deg); }\r\n    100% { transform: translate(-50%,-50%) rotate(360deg); }\r\n  }\r\n  .ldio-ys9jpbnpb6o div {\r\n    position: absolute;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 10px solid #000000;\r\n    border-top-color: transparent;\r\n    border-radius: 50%;\r\n  }\r\n  .ldio-ys9jpbnpb6o div {\r\n    animation: ldio-ys9jpbnpb6o 1.408450704225352s linear infinite;\r\n    top: 50px;\r\n    left: 50px\r\n  }\r\n  .loadingio-spinner-rolling-als0qk4r0ew {\r\n    width: 70px;\r\n    height: 70px;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    background: #ffffff;\r\n  }\r\n  .ldio-ys9jpbnpb6o {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    transform: translateZ(0) scale(0.7);\r\n    backface-visibility: hidden;\r\n    transform-origin: 0 0; /* see note above */\r\n  }\r\n  .ldio-ys9jpbnpb6o div { box-sizing: content-box; }\r\n  /* generated by https://loading.io/ */\r\n</style>\r\n"],"sourceRoot":"webpack:///"}